--- panda3d-00305bccae3643dda6f469f9cfe0cc46b7e5d74b/panda/src/display/graphicsEngine.cxx	2020-04-13 15:10:29.000000000 +0200
+++ panda3d-android/panda/src/display/graphicsEngine.cxx	2020-07-01 06:58:10.023126708 +0200
@@ -50,6 +50,14 @@
 #include "depthTestAttrib.h"
 #include "unionBoundingVolume.h"
 
+#if __ANDROID__
+#include <android/log.h>
+#undef LOG_TAG
+#define LOG_TAG "DEBUG:graphicsEngine"
+#define LOG_I(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)
+#define LOG_E(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
+#endif
+
 #if defined(_WIN32) && defined(HAVE_THREADS) && defined(SIMPLE_THREADS)
 #include "winInputDeviceManager.h"
 #endif
@@ -287,7 +295,9 @@
  */
 
   // Simplify the input parameters.
-
+#if __ANDROID__
+LOG_I("291: make_output");
+#endif
   int x_size = 0, y_size = 0;
   if (win_prop.has_size()) {
     x_size = win_prop.get_x_size();
@@ -307,6 +317,9 @@
   if (host == nullptr) {
     if (gsg != nullptr) {
       if ((!gsg->is_valid())||(gsg->needs_reset())) {
+#if __ANDROID__
+LOG_E("320:open_windows");
+#endif
         open_windows();
       }
       if ((!gsg->is_valid())||(gsg->needs_reset())) {
@@ -318,6 +331,9 @@
         (!host->is_valid())||
         (!host->get_gsg()->is_valid())||
         (host->get_gsg()->needs_reset())) {
+#if __ANDROID__
+LOG_E("332:open_windows");
+#endif
       open_windows();
     }
     if ((host->get_gsg()==nullptr)||
@@ -410,7 +426,12 @@
 
   // Ask the pipe to create a window.
 
+#if __ANDROID__
+  for (int retry=0; retry<1; retry++) {
+    LOG_E("425: make_output");
+#else
   for (int retry=0; retry<10; retry++) {
+#endif
     bool precertify = false;
     PT(GraphicsOutput) window =
       pipe->make_output(name, fb_prop, win_prop, flags, this, gsg, host, retry, precertify);
@@ -422,6 +443,10 @@
           << "Created output of type " << window->get_type() << "\n";
         return window;
       }
+#if __ANDROID__
+LOG_E("442:do_add_window()");
+LOG_E("444:open_windows");
+#endif
       do_add_window(window);
       open_windows();
       if (window->is_valid()) {
@@ -724,7 +749,9 @@
   // that we don't render a frame before the offscreen buffers are ready
   // (which might result in a frame going by without some textures having
   // been rendered).
+#if __ANDROID__
   open_windows();
+#endif
 
   ClockObject *global_clock = ClockObject::get_global_clock();
 
@@ -964,17 +991,20 @@
  */
 void GraphicsEngine::
 open_windows() {
+
   Thread *current_thread = Thread::get_current_thread();
 
   ReMutexHolder holder(_lock, current_thread);
-
   pvector<PT(GraphicsOutput)> new_windows;
   {
     MutexHolder new_windows_holder(_new_windows_lock, current_thread);
+
     if (_new_windows.empty()) {
       return;
     }
-
+#if __ANDROID__
+LOG_I("1002:open_windows-> good ! not empty");
+#endif
     for (auto it = _new_windows.begin(); it != _new_windows.end(); ++it) {
       GraphicsOutput *window = *it;
 
@@ -1046,7 +1076,16 @@
     GraphicsOutput *window = *it;
     if (window->is_valid()) {
       do_add_gsg(window->get_gsg(), window->get_pipe());
+#if __ANDROID__
+        if (is_empty())
+            LOG_E("1077:no window");
+        else
+            LOG_I("1077: filled up");
+#endif
     } else {
+#if __ANDROID__
+LOG_E("988:open_windows->remove !");
+#endif
       remove_window(window);
     }
   }
